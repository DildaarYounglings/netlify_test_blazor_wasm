@using netlify_test_blazor_wasm.Models;
@page "/trello"

<PageTitle>Trello Board</PageTitle>
<section style="display:flex;flex-direction:column;">
    @switch(IsCreatingBoard)
    {
        case false:
        <button style="width:fit-content;" @onclick="ToggleIsCreatingBoard">Create a new board</button>
        break;
        case true:
        <div style="height: fit-content;width:fit-content">
            <button style="width:fit-content;" @onclick="ToggleIsCreatingBoard">Cancel</button>
            <button style="width:fit-content;" @onclick="CreateNewBoard">Create</button>
            <InputText placeholder="enter a name for the board you wish to create" @bind-Value="boardName" style="all:unset;height: fit-content;width:fit-content;background-color:white;border:1px solid black"/>
        </div>
        break;
    }
</section>
@foreach(var boardItem in boards)
{
    <section>
        <h2>@boardItem.BoardName</h2>
        
            @if(boardItem.IsCreatingCategory == true)
            {
                <div style="height: fit-content;width:fit-content">
                    <button style="width:fit-content;" @onclick="() => {boardItem.IsCreatingCategory = !boardItem.IsCreatingCategory;}">Cancel</button>
                    <button style="width:fit-content;" @onclick="() => {CreateNewCategory(boardItem);boardItem.IsCreatingCategory = !boardItem.IsCreatingCategory;}" >Create</button>
                    <InputText placeholder="enter a name for the category you wish to create" @bind-Value="categoryName" style="all:unset;height: fit-content;width:max-content;background-color:white;border:1px solid black"/>
                </div>
            }
            else
            {
                <button style="width:fit-content;" @onclick="() => {boardItem.IsCreatingCategory = !boardItem.IsCreatingCategory;}">Add a Category</button>
                @foreach(var category in boardItem.CardContainers)
                {
                    <div>
                        <h3>@category.BoardCardContainerName</h3>
                        @if(category.IsCreatingCard == true)
                        {

                            <div style="height: fit-content;width:fit-content">
                                <button style="width:fit-content;" @onclick="() => {category.IsCreatingCard = !category.IsCreatingCard;}">Cancel</button>
                                <button style="width:fit-content;" @onclick="() => {CreateNewCard(category);category.IsCreatingCard = !category.IsCreatingCard;}" >Create</button>
                                <InputText placeholder="enter a name for the Card you wish to create" @bind-Value="cardName" style="all:unset;height: fit-content;width:fit-content;background-color:white;border:1px solid black"/>
                                <InputTextArea placeholder="enter text for the cards decription" @bind-Value="cardDescription" />
                            </div>
                        }
                        else
                        {
                            <button style="width:fit-content;" @onclick="() => {category.IsCreatingCard = !category.IsCreatingCard;}">Add a Card</button>
                            @foreach(var card in category.Cards)
                            {
                                <article>
                                    <p>@card.CardName</p>
                                    <p>@card.CardDescription</p>
                                </article>
                            }
                        }
                        
                    </div>
                }
            
            }
    </section>    
}

@code{
    // variables //
    public bool IsCreatingBoard = false;
    public bool IsCreatingCategory = false;
    public bool IsCreatingCard = false;
    public string boardName = "";
    public string categoryName = "";
    public string cardName = "";
    public string cardDescription = "";


    // Lists //
    public List<Board> boards = new List<Board>();
    // Functions or Methods start here //
    public void ToggleIsCreatingBoard()
    {
        IsCreatingBoard = !IsCreatingBoard;
    }
  
    
    public void CreateNewBoard()
    {
        var board = new Board(){BoardName = boardName};
        boards.Add(board);
        boardName = "";
        IsCreatingBoard = false;
    }
    public void CreateNewCategory(Board currentBoard)
    {
        var category = new BoardCardContainer(){BoardCardContainerName = categoryName};
        currentBoard.CardContainers.Add(category);
        categoryName = "";
        IsCreatingCategory = false;
    }
    public void CreateNewCard(BoardCardContainer currentCategory)
    {
        var card = new BoardCard(){CardName = cardName,CardDescription = cardDescription};
        currentCategory.Cards.Add(card);
        cardName = "";
        cardDescription = "";
        IsCreatingCard = false;
    }
    // Functions or Methods end here //
}